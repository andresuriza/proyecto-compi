Terminals unused in grammar

    FUNC
    COORD


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: declaration functions
    3          | frame

    4 frame: FRAME LCURLY body RCURLY

    5 body: loop body
    6     | if body
    7     | else body
    8     | elseif body
    9     | drawing body
   10     | declaration body
   11     | setcolor body
   12     | wait body
   13     | ε

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

   15 condition: IDENT GT NUMBER
   16          | IDENT LT NUMBER
   17          | IDENT EQUALS EQUALS NUMBER

   18 if: IF LPAR condition RPAR LCURLY body RCURLY

   19 else: ELSE LCURLY body RCURLY

   20 elseif: ELSE IF LPAR condition RPAR LCURLY body RCURLY

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON
   22        | DRAW SHAPETHREE LPAR NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON
   23        | DRAW SHAPETWO LPAR NUMBER COMMA NUMBER RPAR SEMICOLON
   24        | DRAW SHAPETWO LPAR IDENT COMMA IDENT RPAR SEMICOLON

   25 setcolor: SETCOLOR LPAR COLORTYP RPAR SEMICOLON
   26         | SETCOLOR LPAR IDENT RPAR SEMICOLON

   27 wait: WAIT LPAR NUMBER RPAR SEMICOLON

   28 declaration: LPAR INT RPAR IDENT EQUALS NUMBER SEMICOLON
   29            | IDENT EQUALS NUMBER SEMICOLON
   30            | IDENT EQUALS COLORTYP SEMICOLON
   31            | LPAR COLOR RPAR IDENT EQUALS COLORTYP SEMICOLON
   32            | LPAR INT RPAR IDENT SEMICOLON
   33            | LPAR COLOR RPAR IDENT SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENT (258) 14 15 16 17 24 26 28 29 30 31 32 33
    NUMBER (259) 14 15 16 17 21 22 23 27 28 29
    FUNC (260)
    LPAR (261) 14 18 20 21 22 23 24 25 26 27 28 31 32 33
    RPAR (262) 14 18 20 21 22 23 24 25 26 27 28 31 32 33
    LCURLY (263) 4 14 18 19 20
    RCURLY (264) 4 14 18 19 20
    INT (265) 28 32
    COLOR (266) 31 33
    COLORTYP (267) 25 30 31
    COORD (268)
    SEMICOLON (269) 14 21 22 23 24 25 26 27 28 29 30 31 32 33
    EQUALS (270) 14 17 28 29 30 31
    SHAPEFOUR (271) 21
    SHAPETHREE (272) 22
    SHAPETWO (273) 23 24
    DRAW (274) 21 22 23 24
    COMMA (275) 21 22 23 24
    SETCOLOR (276) 25 26
    WAIT (277) 27
    FRAME (278) 4
    LOOP (279) 14
    LT (280) 14 16
    GT (281) 15
    PLUS (282) 14
    IF (283) 18 20
    ELSE (284) 19 20


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program (31)
        on left: 1
        on right: 0
    functions (32)
        on left: 2 3
        on right: 1 2
    frame (33)
        on left: 4
        on right: 3
    body (34)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 4 5 6 7 8 9 10 11 12 14 18 19 20
    loop (35)
        on left: 14
        on right: 5
    condition (36)
        on left: 15 16 17
        on right: 18 20
    if (37)
        on left: 18
        on right: 6
    else (38)
        on left: 19
        on right: 7
    elseif (39)
        on left: 20
        on right: 8
    drawing (40)
        on left: 21 22 23 24
        on right: 9
    setcolor (41)
        on left: 25 26
        on right: 11
    wait (42)
        on left: 27
        on right: 12
    declaration (43)
        on left: 28 29 30 31 32 33
        on right: 2 10


State 0

    0 $accept: • program $end

    IDENT  shift, and go to state 1
    LPAR   shift, and go to state 2
    FRAME  shift, and go to state 3

    program      go to state 4
    functions    go to state 5
    frame        go to state 6
    declaration  go to state 7


State 1

   29 declaration: IDENT • EQUALS NUMBER SEMICOLON
   30            | IDENT • EQUALS COLORTYP SEMICOLON

    EQUALS  shift, and go to state 8


State 2

   28 declaration: LPAR • INT RPAR IDENT EQUALS NUMBER SEMICOLON
   31            | LPAR • COLOR RPAR IDENT EQUALS COLORTYP SEMICOLON
   32            | LPAR • INT RPAR IDENT SEMICOLON
   33            | LPAR • COLOR RPAR IDENT SEMICOLON

    INT    shift, and go to state 9
    COLOR  shift, and go to state 10


State 3

    4 frame: FRAME • LCURLY body RCURLY

    LCURLY  shift, and go to state 11


State 4

    0 $accept: program • $end

    $end  shift, and go to state 12


State 5

    1 program: functions •

    $default  reduce using rule 1 (program)


State 6

    3 functions: frame •

    $default  reduce using rule 3 (functions)


State 7

    2 functions: declaration • functions

    IDENT  shift, and go to state 1
    LPAR   shift, and go to state 2
    FRAME  shift, and go to state 3

    functions    go to state 13
    frame        go to state 6
    declaration  go to state 7


State 8

   29 declaration: IDENT EQUALS • NUMBER SEMICOLON
   30            | IDENT EQUALS • COLORTYP SEMICOLON

    NUMBER    shift, and go to state 14
    COLORTYP  shift, and go to state 15


State 9

   28 declaration: LPAR INT • RPAR IDENT EQUALS NUMBER SEMICOLON
   32            | LPAR INT • RPAR IDENT SEMICOLON

    RPAR  shift, and go to state 16


State 10

   31 declaration: LPAR COLOR • RPAR IDENT EQUALS COLORTYP SEMICOLON
   33            | LPAR COLOR • RPAR IDENT SEMICOLON

    RPAR  shift, and go to state 17


State 11

    4 frame: FRAME LCURLY • body RCURLY

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 24
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 functions: declaration functions •

    $default  reduce using rule 2 (functions)


State 14

   29 declaration: IDENT EQUALS NUMBER • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 15

   30 declaration: IDENT EQUALS COLORTYP • SEMICOLON

    SEMICOLON  shift, and go to state 34


State 16

   28 declaration: LPAR INT RPAR • IDENT EQUALS NUMBER SEMICOLON
   32            | LPAR INT RPAR • IDENT SEMICOLON

    IDENT  shift, and go to state 35


State 17

   31 declaration: LPAR COLOR RPAR • IDENT EQUALS COLORTYP SEMICOLON
   33            | LPAR COLOR RPAR • IDENT SEMICOLON

    IDENT  shift, and go to state 36


State 18

   21 drawing: DRAW • SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON
   22        | DRAW • SHAPETHREE LPAR NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON
   23        | DRAW • SHAPETWO LPAR NUMBER COMMA NUMBER RPAR SEMICOLON
   24        | DRAW • SHAPETWO LPAR IDENT COMMA IDENT RPAR SEMICOLON

    SHAPEFOUR   shift, and go to state 37
    SHAPETHREE  shift, and go to state 38
    SHAPETWO    shift, and go to state 39


State 19

   25 setcolor: SETCOLOR • LPAR COLORTYP RPAR SEMICOLON
   26         | SETCOLOR • LPAR IDENT RPAR SEMICOLON

    LPAR  shift, and go to state 40


State 20

   27 wait: WAIT • LPAR NUMBER RPAR SEMICOLON

    LPAR  shift, and go to state 41


State 21

   14 loop: LOOP • LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    LPAR  shift, and go to state 42


State 22

   18 if: IF • LPAR condition RPAR LCURLY body RCURLY

    LPAR  shift, and go to state 43


State 23

   19 else: ELSE • LCURLY body RCURLY
   20 elseif: ELSE • IF LPAR condition RPAR LCURLY body RCURLY

    LCURLY  shift, and go to state 44
    IF      shift, and go to state 45


State 24

    4 frame: FRAME LCURLY body • RCURLY

    RCURLY  shift, and go to state 46


State 25

    5 body: loop • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 47
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 26

    6 body: if • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 48
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 27

    7 body: else • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 49
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 28

    8 body: elseif • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 50
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 29

    9 body: drawing • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 51
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 30

   11 body: setcolor • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 52
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 31

   12 body: wait • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 53
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 32

   10 body: declaration • body

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 54
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 33

   29 declaration: IDENT EQUALS NUMBER SEMICOLON •

    $default  reduce using rule 29 (declaration)


State 34

   30 declaration: IDENT EQUALS COLORTYP SEMICOLON •

    $default  reduce using rule 30 (declaration)


State 35

   28 declaration: LPAR INT RPAR IDENT • EQUALS NUMBER SEMICOLON
   32            | LPAR INT RPAR IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 55
    EQUALS     shift, and go to state 56


State 36

   31 declaration: LPAR COLOR RPAR IDENT • EQUALS COLORTYP SEMICOLON
   33            | LPAR COLOR RPAR IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 57
    EQUALS     shift, and go to state 58


State 37

   21 drawing: DRAW SHAPEFOUR • LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    LPAR  shift, and go to state 59


State 38

   22 drawing: DRAW SHAPETHREE • LPAR NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    LPAR  shift, and go to state 60


State 39

   23 drawing: DRAW SHAPETWO • LPAR NUMBER COMMA NUMBER RPAR SEMICOLON
   24        | DRAW SHAPETWO • LPAR IDENT COMMA IDENT RPAR SEMICOLON

    LPAR  shift, and go to state 61


State 40

   25 setcolor: SETCOLOR LPAR • COLORTYP RPAR SEMICOLON
   26         | SETCOLOR LPAR • IDENT RPAR SEMICOLON

    IDENT     shift, and go to state 62
    COLORTYP  shift, and go to state 63


State 41

   27 wait: WAIT LPAR • NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 64


State 42

   14 loop: LOOP LPAR • IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    IDENT  shift, and go to state 65


State 43

   18 if: IF LPAR • condition RPAR LCURLY body RCURLY

    IDENT  shift, and go to state 66

    condition  go to state 67


State 44

   19 else: ELSE LCURLY • body RCURLY

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 68
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 45

   20 elseif: ELSE IF • LPAR condition RPAR LCURLY body RCURLY

    LPAR  shift, and go to state 69


State 46

    4 frame: FRAME LCURLY body RCURLY •

    $default  reduce using rule 4 (frame)


State 47

    5 body: loop body •

    $default  reduce using rule 5 (body)


State 48

    6 body: if body •

    $default  reduce using rule 6 (body)


State 49

    7 body: else body •

    $default  reduce using rule 7 (body)


State 50

    8 body: elseif body •

    $default  reduce using rule 8 (body)


State 51

    9 body: drawing body •

    $default  reduce using rule 9 (body)


State 52

   11 body: setcolor body •

    $default  reduce using rule 11 (body)


State 53

   12 body: wait body •

    $default  reduce using rule 12 (body)


State 54

   10 body: declaration body •

    $default  reduce using rule 10 (body)


State 55

   32 declaration: LPAR INT RPAR IDENT SEMICOLON •

    $default  reduce using rule 32 (declaration)


State 56

   28 declaration: LPAR INT RPAR IDENT EQUALS • NUMBER SEMICOLON

    NUMBER  shift, and go to state 70


State 57

   33 declaration: LPAR COLOR RPAR IDENT SEMICOLON •

    $default  reduce using rule 33 (declaration)


State 58

   31 declaration: LPAR COLOR RPAR IDENT EQUALS • COLORTYP SEMICOLON

    COLORTYP  shift, and go to state 71


State 59

   21 drawing: DRAW SHAPEFOUR LPAR • NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 72


State 60

   22 drawing: DRAW SHAPETHREE LPAR • NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 73


State 61

   23 drawing: DRAW SHAPETWO LPAR • NUMBER COMMA NUMBER RPAR SEMICOLON
   24        | DRAW SHAPETWO LPAR • IDENT COMMA IDENT RPAR SEMICOLON

    IDENT   shift, and go to state 74
    NUMBER  shift, and go to state 75


State 62

   26 setcolor: SETCOLOR LPAR IDENT • RPAR SEMICOLON

    RPAR  shift, and go to state 76


State 63

   25 setcolor: SETCOLOR LPAR COLORTYP • RPAR SEMICOLON

    RPAR  shift, and go to state 77


State 64

   27 wait: WAIT LPAR NUMBER • RPAR SEMICOLON

    RPAR  shift, and go to state 78


State 65

   14 loop: LOOP LPAR IDENT • EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    EQUALS  shift, and go to state 79


State 66

   15 condition: IDENT • GT NUMBER
   16          | IDENT • LT NUMBER
   17          | IDENT • EQUALS EQUALS NUMBER

    EQUALS  shift, and go to state 80
    LT      shift, and go to state 81
    GT      shift, and go to state 82


State 67

   18 if: IF LPAR condition • RPAR LCURLY body RCURLY

    RPAR  shift, and go to state 83


State 68

   19 else: ELSE LCURLY body • RCURLY

    RCURLY  shift, and go to state 84


State 69

   20 elseif: ELSE IF LPAR • condition RPAR LCURLY body RCURLY

    IDENT  shift, and go to state 66

    condition  go to state 85


State 70

   28 declaration: LPAR INT RPAR IDENT EQUALS NUMBER • SEMICOLON

    SEMICOLON  shift, and go to state 86


State 71

   31 declaration: LPAR COLOR RPAR IDENT EQUALS COLORTYP • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 72

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER • COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    COMMA  shift, and go to state 88


State 73

   22 drawing: DRAW SHAPETHREE LPAR NUMBER • COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    COMMA  shift, and go to state 89


State 74

   24 drawing: DRAW SHAPETWO LPAR IDENT • COMMA IDENT RPAR SEMICOLON

    COMMA  shift, and go to state 90


State 75

   23 drawing: DRAW SHAPETWO LPAR NUMBER • COMMA NUMBER RPAR SEMICOLON

    COMMA  shift, and go to state 91


State 76

   26 setcolor: SETCOLOR LPAR IDENT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 77

   25 setcolor: SETCOLOR LPAR COLORTYP RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 93


State 78

   27 wait: WAIT LPAR NUMBER RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 79

   14 loop: LOOP LPAR IDENT EQUALS • NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    NUMBER  shift, and go to state 95


State 80

   17 condition: IDENT EQUALS • EQUALS NUMBER

    EQUALS  shift, and go to state 96


State 81

   16 condition: IDENT LT • NUMBER

    NUMBER  shift, and go to state 97


State 82

   15 condition: IDENT GT • NUMBER

    NUMBER  shift, and go to state 98


State 83

   18 if: IF LPAR condition RPAR • LCURLY body RCURLY

    LCURLY  shift, and go to state 99


State 84

   19 else: ELSE LCURLY body RCURLY •

    $default  reduce using rule 19 (else)


State 85

   20 elseif: ELSE IF LPAR condition • RPAR LCURLY body RCURLY

    RPAR  shift, and go to state 100


State 86

   28 declaration: LPAR INT RPAR IDENT EQUALS NUMBER SEMICOLON •

    $default  reduce using rule 28 (declaration)


State 87

   31 declaration: LPAR COLOR RPAR IDENT EQUALS COLORTYP SEMICOLON •

    $default  reduce using rule 31 (declaration)


State 88

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA • NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 101


State 89

   22 drawing: DRAW SHAPETHREE LPAR NUMBER COMMA • NUMBER COMMA NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 102


State 90

   24 drawing: DRAW SHAPETWO LPAR IDENT COMMA • IDENT RPAR SEMICOLON

    IDENT  shift, and go to state 103


State 91

   23 drawing: DRAW SHAPETWO LPAR NUMBER COMMA • NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 104


State 92

   26 setcolor: SETCOLOR LPAR IDENT RPAR SEMICOLON •

    $default  reduce using rule 26 (setcolor)


State 93

   25 setcolor: SETCOLOR LPAR COLORTYP RPAR SEMICOLON •

    $default  reduce using rule 25 (setcolor)


State 94

   27 wait: WAIT LPAR NUMBER RPAR SEMICOLON •

    $default  reduce using rule 27 (wait)


State 95

   14 loop: LOOP LPAR IDENT EQUALS NUMBER • SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    SEMICOLON  shift, and go to state 105


State 96

   17 condition: IDENT EQUALS EQUALS • NUMBER

    NUMBER  shift, and go to state 106


State 97

   16 condition: IDENT LT NUMBER •

    $default  reduce using rule 16 (condition)


State 98

   15 condition: IDENT GT NUMBER •

    $default  reduce using rule 15 (condition)


State 99

   18 if: IF LPAR condition RPAR LCURLY • body RCURLY

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 107
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 100

   20 elseif: ELSE IF LPAR condition RPAR • LCURLY body RCURLY

    LCURLY  shift, and go to state 108


State 101

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER • COMMA NUMBER COMMA NUMBER RPAR SEMICOLON

    COMMA  shift, and go to state 109


State 102

   22 drawing: DRAW SHAPETHREE LPAR NUMBER COMMA NUMBER • COMMA NUMBER RPAR SEMICOLON

    COMMA  shift, and go to state 110


State 103

   24 drawing: DRAW SHAPETWO LPAR IDENT COMMA IDENT • RPAR SEMICOLON

    RPAR  shift, and go to state 111


State 104

   23 drawing: DRAW SHAPETWO LPAR NUMBER COMMA NUMBER • RPAR SEMICOLON

    RPAR  shift, and go to state 112


State 105

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON • IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    IDENT  shift, and go to state 113


State 106

   17 condition: IDENT EQUALS EQUALS NUMBER •

    $default  reduce using rule 17 (condition)


State 107

   18 if: IF LPAR condition RPAR LCURLY body • RCURLY

    RCURLY  shift, and go to state 114


State 108

   20 elseif: ELSE IF LPAR condition RPAR LCURLY • body RCURLY

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 115
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 109

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA • NUMBER COMMA NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 116


State 110

   22 drawing: DRAW SHAPETHREE LPAR NUMBER COMMA NUMBER COMMA • NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 117


State 111

   24 drawing: DRAW SHAPETWO LPAR IDENT COMMA IDENT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 118


State 112

   23 drawing: DRAW SHAPETWO LPAR NUMBER COMMA NUMBER RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 119


State 113

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT • LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    LT  shift, and go to state 120


State 114

   18 if: IF LPAR condition RPAR LCURLY body RCURLY •

    $default  reduce using rule 18 (if)


State 115

   20 elseif: ELSE IF LPAR condition RPAR LCURLY body • RCURLY

    RCURLY  shift, and go to state 121


State 116

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER • COMMA NUMBER RPAR SEMICOLON

    COMMA  shift, and go to state 122


State 117

   22 drawing: DRAW SHAPETHREE LPAR NUMBER COMMA NUMBER COMMA NUMBER • RPAR SEMICOLON

    RPAR  shift, and go to state 123


State 118

   24 drawing: DRAW SHAPETWO LPAR IDENT COMMA IDENT RPAR SEMICOLON •

    $default  reduce using rule 24 (drawing)


State 119

   23 drawing: DRAW SHAPETWO LPAR NUMBER COMMA NUMBER RPAR SEMICOLON •

    $default  reduce using rule 23 (drawing)


State 120

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT • NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    NUMBER  shift, and go to state 124


State 121

   20 elseif: ELSE IF LPAR condition RPAR LCURLY body RCURLY •

    $default  reduce using rule 20 (elseif)


State 122

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA • NUMBER RPAR SEMICOLON

    NUMBER  shift, and go to state 125


State 123

   22 drawing: DRAW SHAPETHREE LPAR NUMBER COMMA NUMBER COMMA NUMBER RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 126


State 124

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER • SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    SEMICOLON  shift, and go to state 127


State 125

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER • RPAR SEMICOLON

    RPAR  shift, and go to state 128


State 126

   22 drawing: DRAW SHAPETHREE LPAR NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON •

    $default  reduce using rule 22 (drawing)


State 127

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON • IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    IDENT  shift, and go to state 129


State 128

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 129

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT • EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    EQUALS  shift, and go to state 131


State 130

   21 drawing: DRAW SHAPEFOUR LPAR NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAR SEMICOLON •

    $default  reduce using rule 21 (drawing)


State 131

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS • IDENT PLUS NUMBER RPAR LCURLY body RCURLY

    IDENT  shift, and go to state 132


State 132

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT • PLUS NUMBER RPAR LCURLY body RCURLY

    PLUS  shift, and go to state 133


State 133

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS • NUMBER RPAR LCURLY body RCURLY

    NUMBER  shift, and go to state 134


State 134

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER • RPAR LCURLY body RCURLY

    RPAR  shift, and go to state 135


State 135

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR • LCURLY body RCURLY

    LCURLY  shift, and go to state 136


State 136

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY • body RCURLY

    IDENT     shift, and go to state 1
    LPAR      shift, and go to state 2
    DRAW      shift, and go to state 18
    SETCOLOR  shift, and go to state 19
    WAIT      shift, and go to state 20
    LOOP      shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 23

    $default  reduce using rule 13 (body)

    body         go to state 137
    loop         go to state 25
    if           go to state 26
    else         go to state 27
    elseif       go to state 28
    drawing      go to state 29
    setcolor     go to state 30
    wait         go to state 31
    declaration  go to state 32


State 137

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body • RCURLY

    RCURLY  shift, and go to state 138


State 138

   14 loop: LOOP LPAR IDENT EQUALS NUMBER SEMICOLON IDENT LT NUMBER SEMICOLON IDENT EQUALS IDENT PLUS NUMBER RPAR LCURLY body RCURLY •

    $default  reduce using rule 14 (loop)
